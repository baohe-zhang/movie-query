{"version":3,"sources":["components/movie.jsx","components/gallery.jsx","components/detail.jsx","components/details.jsx","components/movieListView.jsx","components/search.jsx","App.js","serviceWorker.js","index.js"],"names":["Movie","state","react_default","a","createElement","className","Link","to","pathname","concat","this","props","id","src","poster_path","Component","Gallery","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","genres","Action","Adventure","Animation","Comedy","Crime","Drama","Fantasy","History","getMoviesByGenre","query","axios","get","then","res","setState","movies","data","results","getPopularMovies","e","genre","_this2","keys","map","key","onClick","updateGenre","movie","components_movie","assign","Detail","location","title","release_date","vote_average","overview","Details","MovieListView","popularity","Search","getMoviesByQuery","sort","b","sortValue","sortOrder","Date","bind","assertThisInitialized","placeholder","type","value","onChange","updateQuery","target","updateSortValue","updateSortOrder","movieListView","App","HashRouter","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36aa0638.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Movie extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"movie-poster\">\n        <Link\n          to={{\n            pathname: `/details/${this.props.id}`,\n            state: { id: `${this.props.id}` }\n          }}\n        >\n          <img\n            src={`https://image.tmdb.org/t/p/w200${this.props.poster_path}`}\n          />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Movie from \"./movie\";\n\nclass Gallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: []\n    };\n  }\n\n  genres = {\n    Action: 28,\n    Adventure: 12,\n    Animation: 16,\n    Comedy: 35,\n    Crime: 80,\n    Drama: 18,\n    Fantasy: 14,\n    History: 36\n  };\n\n  updateGenre(e, genre) {\n    this.getMoviesByGenre(this.genres[genre]);\n  }\n\n  getMoviesByGenre = query => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=${query}&api_key=cfe422613b250f702980a3bbf9e90716`\n      )\n      .then(res =>\n        this.setState({\n          movies: res.data.results\n        })\n      );\n  };\n\n  getPopularMovies = () => {\n    axios\n      .get(\n        \"https://api.themoviedb.org/3/movie/popular?api_key=cfe422613b250f702980a3bbf9e90716\"\n      )\n      .then(res => {\n        this.setState({\n          movies: res.data.results\n        });\n      });\n  };\n\n  componentDidMount() {\n    this.getPopularMovies();\n  }\n\n  render() {\n    return (\n      <div className=\"gallery-container\">\n        <div className=\"switch-bar\">\n          <Link to={{ pathname: \"search\" }} className=\"badge m-2 badge-primary\">\n            Search\n          </Link>\n          <Link to={{ pathname: \"/\" }} className=\"badge m-2 badge-primary\">\n            Gallery\n          </Link>\n        </div>\n\n        <div className=\"genres-bar\">\n          {Object.keys(this.genres).map(genre => (\n            <button\n              key={genre}\n              onClick={e => this.updateGenre(e, genre)}\n              className=\"btn m-1 btn-info btn\"\n            >\n              {genre}\n            </button>\n          ))}\n        </div>\n\n        <div className=\"movies-container\">\n          {this.state.movies.map(movie => (\n            <Movie {...movie} key={movie.id} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gallery;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {}\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${\n          this.props.location.state.id\n        }?api_key=cfe422613b250f702980a3bbf9e90716`\n      )\n      .then(res => {\n        this.setState({\n          movie: res.data\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"detail-container\">\n        <div>\n          <Link\n            to={{ pathname: \"/search\" }}\n            className=\"badge m-2 badge-primary\"\n          >\n            Search\n          </Link>\n          <Link to={{ pathname: \"/\" }} className=\"badge m-2 badge-primary\">\n            Gallery\n          </Link>\n        </div>\n\n        <div className=\"movie-detail\">\n          <img\n            src={`https://image.tmdb.org/t/p/w200${\n              this.state.movie.poster_path\n            }`}\n          />\n          <h2>{this.state.movie.title}</h2>\n          <p>{this.state.movie.release_date}</p>\n          <p>Vote: {this.state.movie.vote_average}</p>\n          <p>{this.state.movie.overview}</p>\n        </div>\n\n        <div>\n          <Link\n            to={{\n              pathname: `/details/${this.state.movie.id - 1}`,\n              state: {\n                id: `${this.state.movie.id - 1}`\n              }\n            }}\n            className=\"badge m-2 badge-primary\"\n          >\n            Prev\n          </Link>\n          <Link\n            to={{\n              pathname: `/details/${this.state.movie.id + 1}`,\n              state: {\n                id: `${this.state.movie.id + 1}`\n              }\n            }}\n            className=\"badge m-2 badge-primary\"\n          >\n            Next\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Detail;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Details extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {}\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${\n          this.props.location.state.id\n        }?api_key=cfe422613b250f702980a3bbf9e90716`\n      )\n      .then(res => {\n        this.setState({\n          movie: res.data\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"detail-container\">\n        <div>\n          <Link\n            to={{ pathname: \"/search\" }}\n            className=\"badge m-2 badge-primary\"\n          >\n            Search\n          </Link>\n          <Link to={{ pathname: \"/\" }} className=\"badge m-2 badge-primary\">\n            Gallery\n          </Link>\n        </div>\n\n        <div className=\"movie-detail\">\n          <img\n            src={`https://image.tmdb.org/t/p/w200${\n              this.state.movie.poster_path\n            }`}\n          />\n          <h2>{this.state.movie.title}</h2>\n          <p>{this.state.movie.release_date}</p>\n          <p>Vote: {this.state.movie.vote_average}</p>\n          <p>{this.state.movie.overview}</p>\n        </div>\n\n        <div>\n          <Link\n            to={{\n              pathname: `/detail/${this.state.movie.id - 1}`,\n              state: {\n                id: `${this.state.movie.id - 1}`\n              }\n            }}\n            className=\"badge m-2 badge-primary\"\n          >\n            Prev\n          </Link>\n          <Link\n            to={{\n              pathname: `/detail/${this.state.movie.id + 1}`,\n              state: {\n                id: `${this.state.movie.id + 1}`\n              }\n            }}\n            className=\"badge m-2 badge-primary\"\n          >\n            Next\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Details;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass MovieListView extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"movie-list-view-container\">\n        <Link\n          to={{\n            pathname: `/details/${this.props.id}`,\n            state: { id: `${this.props.id}` }\n          }}\n        >\n          <div className=\"movie-poster-small\">\n            <img\n              src={`https://image.tmdb.org/t/p/w200${this.props.poster_path}`}\n            />\n          </div>\n        </Link>\n\n        <div className=\"movie-text\">\n          <h4>{this.props.title}</h4>\n          <p>Popularity: {this.props.popularity}</p>\n          <p>Release Date: {this.props.release_date}</p>\n          <p>{this.props.overview}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieListView;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport MovieListView from \"./movieListView\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      query: \"\",\n      placeholder: \"Search Movie\",\n      sortValue: \"popularity\",\n      sortOrder: \"desc\"\n    };\n  }\n\n  updateSortOrder(e, sortOrder) {\n    this.setState({\n      sortOrder\n    });\n    this.getMoviesByQuery();\n  }\n\n  updateSortValue(e, sortValue) {\n    this.setState({\n      sortValue\n    });\n    this.getMoviesByQuery();\n  }\n\n  updateQuery(e, query) {\n    this.setState({\n      query\n    });\n    this.getMoviesByQuery();\n  }\n\n  getMoviesByQuery = () => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?query=${\n          this.state.query\n        }&api_key=cfe422613b250f702980a3bbf9e90716`\n      )\n      .then(res =>\n        this.setState({\n          movies: res.data.results.sort(\n            function(a, b) {\n              if (this.state.sortValue === \"popularity\") {\n                return this.state.sortOrder === \"asc\"\n                  ? a.popularity - b.popularity\n                  : b.popularity - a.popularity;\n              } else {\n                return this.state.sortOrder === \"asc\"\n                  ? new Date(a.release_date) - new Date(b.release_date)\n                  : new Date(b.release_date) - new Date(a.release_date);\n              }\n            }.bind(this)\n          )\n        })\n      );\n  };\n\n  render() {\n    return (\n      <div className=\"search-container\">\n        <div className=\"switch-bar\">\n          <Link to={{ pathname: \"search\" }} className=\"badge m-2 badge-primary\">\n            Search\n          </Link>\n          <Link to={{ pathname: \"/\" }} className=\"badge m-2 badge-primary\">\n            Gallery\n          </Link>\n        </div>\n\n        <div className=\"search-block\">\n          <input\n            type=\"search\"\n            value={this.state.query}\n            onChange={e => this.updateQuery(e, e.target.value)}\n            placeholder={this.state.placeholder}\n            className=\"search-bar\"\n          />\n\n          <label>\n            <b>Sort by</b>&nbsp;\n            <select\n              value={this.state.sortValue}\n              onChange={e => this.updateSortValue(e, e.target.value)}\n            >\n              <option value=\"popularity\">Popularity</option>\n              <option value=\"release_date\">Release Date</option>\n            </select>\n          </label>\n\n          <label>\n            <b>Order</b>&nbsp;&nbsp;\n            <select\n              value={this.state.sortOrder}\n              onChange={e => this.updateSortOrder(e, e.target.value)}\n            >\n              <option value=\"desc\">Descending</option>\n              <option value=\"asc\">Ascending</option>\n            </select>\n          </label>\n        </div>\n\n        <div className=\"movies-list-container\">\n          {this.state.movies.map(movie => (\n            <MovieListView {...movie} key={movie.id} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Gallery from \"./components/gallery\";\nimport Detail from \"./components/detail\";\nimport Details from \"./components/details\";\nimport Search from \"./components/search\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"root\">\n        <Router>\n          <div>\n            <Route exact path=\"/\" component={Gallery} />\n            <Route path=\"/detail/:id\" component={Detail} />\n            <Route path=\"/details/:id\" component={Details} />\n            <Route path=\"/search\" component={Search} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}